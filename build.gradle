plugins {
    id 'fabric-loom' version "1.7-SNAPSHOT"
    id 'io.github.ladysnake.chenille' version '0.14.0'
}

archivesBaseName = project.archives_base_name
group = project.maven_group
version = project.mod_version

chenille {
    configurePublishing {
        mainArtifact = remapJar.archiveFile
        withLadysnakeMaven()
        withCurseforgeRelease()
        withModrinthRelease()
        withGithubRelease()
    }

    license = project.license_header
    javaVersion = 21
}

sourceSets {
    testmod {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
    }
}

loom {
    runs {
        testmodClient {
            client()
            name = "Testmod Client"
            source sourceSets.testmod
        }
    }
}

repositories {
    chenille.repositories {
        terraformers()
        modrinth()
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    modLocalRuntime "com.terraformersmc:modmenu:${project.modmenu_version}"
//    modCompileOnly ("maven.modrinth:iris:${project.iris_version}")

    compileOnly "org.jetbrains:annotations:${jb_annotations_version}"
    compileOnly "com.google.code.findbugs:jsr305:${findbugs_version}"
    compileOnly "org.apiguardian:apiguardian-api:${apiguardian_version}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.4.0-M1"

    testmodCompileOnly "org.jetbrains:annotations:${jb_annotations_version}"
    testmodImplementation sourceSets.main.output
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

loom {
    accessWidenerPath = file("src/main/resources/satin.accesswidener")
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}



publishing {
    publications {
        create("relocation", MavenPublication) {
            pom {
                // Old artifact coordinates
                groupId = "io.github.ladysnake"

                distributionManagement {
                    relocation {
                        // New artifact coordinates
                        groupId = "org.ladysnake"
                        message = "groupId has been changed"
                    }
                }
            }
        }
    }
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

